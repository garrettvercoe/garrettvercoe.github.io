{"version":3,"sources":["webpack:///./node_modules/semantic-ui-react/dist/es/collections/Message/MessageContent.js","webpack:///./node_modules/semantic-ui-react/dist/es/collections/Message/MessageHeader.js","webpack:///./node_modules/semantic-ui-react/dist/es/collections/Message/MessageItem.js","webpack:///./node_modules/semantic-ui-react/dist/es/collections/Message/MessageList.js","webpack:///./node_modules/semantic-ui-react/dist/es/collections/Message/Message.js","webpack:///./src/components/greeting.js","webpack:///./src/pages/index.js","webpack:///./node_modules/core-js/modules/es6.function.name.js"],"names":["MessageContent","props","children","className","content","classes","classnames_default","rest","Object","getUnhandledProps","ElementType","getElementType","react_default","a","createElement","extends_default","lib","isNil","handledProps","propTypes","Message_MessageContent","MessageHeader","create","factories","val","Message_MessageHeader","MessageItem","defaultProps","as","Message_MessageItem","MessageList","items","map_default","Message_MessageList","Message_Message","_Component","Message","_getPrototypeOf2","_this","classCallCheck_default","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn_default","getPrototypeOf_default","call","apply","concat","defineProperty_default","assertThisInitialized_default","e","onDismiss","inherits_default","createClass_default","key","value","_this$props","attached","color","compact","error","floating","header","hidden","icon","info","list","negative","positive","size","success","visible","warning","classNameBuilders","dismissIcon","Icon","name","onClick","handleDismiss","autoGenerateKey","isNil_default","react","Greeting","state","firstName","handleInputChange","event","_this$setState","target","setState","handleSubmit","preventDefault","render","Form","onSubmit","Label","pointing","class","Input","transparent","fluid","placeholder","type","onChange","React","Component","IndexPage","layout","Grid","Column","mobile","tablet","computer","greeting_Greeting","href","Button","dP","__webpack_require__","f","FProto","Function","prototype","nameRE","configurable","get","match"],"mappings":"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","file":"component---src-pages-index-js-a148b4a65468920d3fb4.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A message can contain a content.\n */\n\nfunction MessageContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('content', className);\n  var rest = getUnhandledProps(MessageContent, props);\n  var ElementType = getElementType(MessageContent, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nMessageContent.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nMessageContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nexport default MessageContent;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A message can contain a header.\n */\n\nfunction MessageHeader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('header', className);\n  var rest = getUnhandledProps(MessageHeader, props);\n  var ElementType = getElementType(MessageHeader, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nMessageHeader.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nMessageHeader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nMessageHeader.create = createShorthandFactory(MessageHeader, function (val) {\n  return {\n    content: val\n  };\n});\nexport default MessageHeader;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A message list can contain an item.\n */\n\nfunction MessageItem(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('content', className);\n  var rest = getUnhandledProps(MessageItem, props);\n  var ElementType = getElementType(MessageItem, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nMessageItem.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nMessageItem.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nMessageItem.defaultProps = {\n  as: 'li'\n};\nMessageItem.create = createShorthandFactory(MessageItem, function (content) {\n  return {\n    content: content\n  };\n});\nexport default MessageItem;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _map from \"lodash/map\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\nimport MessageItem from './MessageItem';\n/**\n * A message can contain a list of items.\n */\n\nfunction MessageList(props) {\n  var children = props.children,\n      className = props.className,\n      items = props.items;\n  var classes = cx('list', className);\n  var rest = getUnhandledProps(MessageList, props);\n  var ElementType = getElementType(MessageList, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? _map(items, MessageItem.create) : children);\n}\n\nMessageList.handledProps = [\"as\", \"children\", \"className\", \"items\"];\nMessageList.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand Message.Items. */\n  items: customPropTypes.collectionShorthand\n} : {};\nMessageList.defaultProps = {\n  as: 'ul'\n};\nMessageList.create = createShorthandFactory(MessageList, function (val) {\n  return {\n    items: val\n  };\n});\nexport default MessageList;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _isNil from \"lodash/isNil\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { childrenUtils, createHTMLParagraph, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey } from '../../lib';\nimport Icon from '../../elements/Icon';\nimport MessageContent from './MessageContent';\nimport MessageHeader from './MessageHeader';\nimport MessageList from './MessageList';\nimport MessageItem from './MessageItem';\n/**\n * A message displays information that explains nearby content.\n * @see Form\n */\n\nvar Message =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Message, _Component);\n\n  function Message() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Message);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Message)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleDismiss\", function (e) {\n      var onDismiss = _this.props.onDismiss;\n      if (onDismiss) onDismiss(e, _this.props);\n    });\n\n    return _this;\n  }\n\n  _createClass(Message, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          attached = _this$props.attached,\n          children = _this$props.children,\n          className = _this$props.className,\n          color = _this$props.color,\n          compact = _this$props.compact,\n          content = _this$props.content,\n          error = _this$props.error,\n          floating = _this$props.floating,\n          header = _this$props.header,\n          hidden = _this$props.hidden,\n          icon = _this$props.icon,\n          info = _this$props.info,\n          list = _this$props.list,\n          negative = _this$props.negative,\n          onDismiss = _this$props.onDismiss,\n          positive = _this$props.positive,\n          size = _this$props.size,\n          success = _this$props.success,\n          visible = _this$props.visible,\n          warning = _this$props.warning;\n      var classes = cx('ui', color, size, useKeyOnly(compact, 'compact'), useKeyOnly(error, 'error'), useKeyOnly(floating, 'floating'), useKeyOnly(hidden, 'hidden'), useKeyOnly(icon, 'icon'), useKeyOnly(info, 'info'), useKeyOnly(negative, 'negative'), useKeyOnly(positive, 'positive'), useKeyOnly(success, 'success'), useKeyOnly(visible, 'visible'), useKeyOnly(warning, 'warning'), useKeyOrValueAndKey(attached, 'attached'), 'message', className);\n      var dismissIcon = onDismiss && React.createElement(Icon, {\n        name: \"close\",\n        onClick: this.handleDismiss\n      });\n      var rest = getUnhandledProps(Message, this.props);\n      var ElementType = getElementType(Message, this.props);\n\n      if (!childrenUtils.isNil(children)) {\n        return React.createElement(ElementType, _extends({}, rest, {\n          className: classes\n        }), dismissIcon, children);\n      }\n\n      return React.createElement(ElementType, _extends({}, rest, {\n        className: classes\n      }), dismissIcon, Icon.create(icon, {\n        autoGenerateKey: false\n      }), (!_isNil(header) || !_isNil(content) || !_isNil(list)) && React.createElement(MessageContent, null, MessageHeader.create(header, {\n        autoGenerateKey: false\n      }), MessageList.create(list, {\n        autoGenerateKey: false\n      }), createHTMLParagraph(content, {\n        autoGenerateKey: false\n      })));\n    }\n  }]);\n\n  return Message;\n}(Component);\n\n_defineProperty(Message, \"Content\", MessageContent);\n\n_defineProperty(Message, \"Header\", MessageHeader);\n\n_defineProperty(Message, \"List\", MessageList);\n\n_defineProperty(Message, \"Item\", MessageItem);\n\n_defineProperty(Message, \"handledProps\", [\"as\", \"attached\", \"children\", \"className\", \"color\", \"compact\", \"content\", \"error\", \"floating\", \"header\", \"hidden\", \"icon\", \"info\", \"list\", \"negative\", \"onDismiss\", \"positive\", \"size\", \"success\", \"visible\", \"warning\"]);\n\nexport { Message as default };\nMessage.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A message can be formatted to attach itself to other content. */\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['bottom', 'top'])]),\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A message can be formatted to be different colors. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** A message can only take up the width of its content. */\n  compact: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A message may be formatted to display a negative message. Same as `negative`. */\n  error: PropTypes.bool,\n\n  /** A message can float above content that it is related to. */\n  floating: PropTypes.bool,\n\n  /** Shorthand for MessageHeader. */\n  header: customPropTypes.itemShorthand,\n\n  /** A message can be hidden. */\n  hidden: PropTypes.bool,\n\n  /** A message can contain an icon. */\n  icon: PropTypes.oneOfType([customPropTypes.itemShorthand, PropTypes.bool]),\n\n  /** A message may be formatted to display information. */\n  info: PropTypes.bool,\n\n  /** Array shorthand items for the MessageList. Mutually exclusive with children. */\n  list: customPropTypes.collectionShorthand,\n\n  /** A message may be formatted to display a negative message. Same as `error`. */\n  negative: PropTypes.bool,\n\n  /**\n   * A message that the user can choose to hide.\n   * Called when the user clicks the \"x\" icon. This also adds the \"x\" icon.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onDismiss: PropTypes.func,\n\n  /** A message may be formatted to display a positive message.  Same as `success`. */\n  positive: PropTypes.bool,\n\n  /** A message can have different sizes. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'medium')),\n\n  /** A message may be formatted to display a positive message.  Same as `positive`. */\n  success: PropTypes.bool,\n\n  /** A message can be set to visible to force itself to be shown. */\n  visible: PropTypes.bool,\n\n  /** A message may be formatted to display warning messages. */\n  warning: PropTypes.bool\n} : {};","import React from \"react\"\nimport {Form, Input, Label, Message} from \"semantic-ui-react\"\nimport \"./greeting.css\"\nexport default class Greeting extends React.Component {\n  state = {\n    firstName: \"\",\n    hidden: true,\n  }\n\n  handleInputChange = event => {\n    const target = event.target\n    const value = target.value\n    const name = target.name\n    \n\n    this.setState({\n      [name]: value,\n    })\n\n    \n\n  }\n\n  handleSubmit = event => {\n    const target = event.target\n    const hidden = target.hidden\n    event.preventDefault()\n    this.setState({\n    hidden: false,\n      })\n  }\n\n  render() {\n    return (\n\n      <Form onSubmit={this.handleSubmit}>\n      <Label pointing='right'>Hey! What's your name?\n      <div class=\"input-underline\"><Input transparent fluid \n        \n        placeholder='First Name'\n          type=\"text\"\n          name=\"firstName\"\n          value={this.state.firstName}\n          onChange={this.handleInputChange}\n          onSubmit={this.handleSubmit}\n        /> </div>\n      </Label>\n       \n           <Message  size='mini' compact hidden= {this.state.hidden}>\n           <p><strong>  Hey {this.state.firstName}, welcome to my site. </strong>Take a look around and leave me a message in the bottom \n               ight if you'd like to chat or have any questions!</p></Message>\n      </Form>\n\n    )\n  }\n}","import React from 'react'\nimport { Button, input, Grid, Form } from 'semantic-ui-react'\nimport Layout from '../components/layout'\nimport Greeting from '../components/greeting'\nimport Projects from './projects'\n\nconst IndexPage = () => (\n  <Layout>\n    <Grid>\n      <Grid.Column mobile={12} tablet={3} computer={3} />\n\n      <div class=\"rec-slant\">\n        <h1>Design with Intent.</h1>\n      </div>\n    </Grid>\n    <Grid>\n      <Grid.Column mobile={12} tablet={3} computer={3}>\n        <Greeting />\n        <p class=\"left\">\n          Currently looking for a full-time summer internship.\n          <br /> <br />\n          Not able to currently accept long-term freelance projects.\n        </p>\n\n        <a class=\"bodyLink\" href=\"https://google.com\">\n          Github ->\n        </a>\n        <br />\n        <a class=\"bodyLink\" href=\"https://google.com\">\n          Linkedin ->\n        </a>\n      </Grid.Column>\n\n      <Grid.Column mobile={12} tablet={3} computer={3}>\n        <p>\n          Welcome to this humble Gatsby Semantic UI starter. It is a very thin\n          layer on top of the regular Gatsby 2 starter. All that has been added\n          is Semantic UI as the component library of choice.\n          <Button size=\"tiny\">Read More -></Button>\n        </p>\n\n        <p>\n          Welcome to this humble Gatsby Semantic UI starter. It is a very thin\n          layer on top of the regular Gatsby 2 starter. All that has been added\n          is Semantic UI as the component library of choice.\n        </p>\n\n        {/* <div class=\"icon chart\">\n          <i />\n          <i />\n          <i />\n        </div> */}\n      </Grid.Column>\n      <Grid.Column mobile={12} tablet={3} computer={3}>\n        <p>\n          Everything is pre-setup and ready to go. You can either use the\n          default Semantic UI theme as it currently runs, or you can override\n          all variables and make custom CSS changes in the{' '}\n          <code>src/semantic/site</code> folder.\n        </p>\n\n        <p>\n          Everything is pre-setup and ready to go. You can either use the\n          default Semantic UI theme as it currently runs, or you can override\n          all variables and make custom CSS changes in the{' '}\n          <code>src/semantic/site</code> folder.\n        </p>\n      </Grid.Column>\n      <Grid.Column mobile={12} tablet={3} computer={3}>\n        <p>\n          The folder contains all the standard settings of the default theme so\n          you don't have to remember which variables are available.\n        </p>\n        <p>\n          The folder contains all the standard settings of the default theme so\n          you don't have to remember which variables are available.\n        </p>\n      </Grid.Column>\n    </Grid>\n  </Layout>\n)\n\nexport default IndexPage\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n"],"sourceRoot":""}