{"version":3,"sources":["webpack:///./node_modules/semantic-ui-react/dist/es/collections/Message/MessageContent.js","webpack:///./node_modules/semantic-ui-react/dist/es/collections/Message/MessageHeader.js","webpack:///./node_modules/semantic-ui-react/dist/es/collections/Message/MessageItem.js","webpack:///./node_modules/semantic-ui-react/dist/es/collections/Message/MessageList.js","webpack:///./node_modules/semantic-ui-react/dist/es/collections/Message/Message.js","webpack:///./src/components/greeting.js","webpack:///./src/pages/index.js","webpack:///./src/components/gridBlocks/experimentGrid.js","webpack:///./src/components/gridBlocks/thoughtGrid.js"],"names":["MessageContent","props","children","className","content","classes","classnames_default","rest","Object","getUnhandledProps","ElementType","getElementType","react_default","a","createElement","extends_default","lib","isNil","handledProps","propTypes","Message_MessageContent","MessageHeader","create","factories","val","Message_MessageHeader","MessageItem","defaultProps","as","Message_MessageItem","MessageList","items","map_default","Message_MessageList","Message_Message","_Component","Message","_getPrototypeOf2","_this","classCallCheck_default","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn_default","getPrototypeOf_default","call","apply","concat","defineProperty_default","assertThisInitialized_default","e","onDismiss","inherits_default","createClass_default","key","value","_this$props","attached","color","compact","error","floating","header","hidden","icon","info","list","negative","positive","size","success","visible","warning","classNameBuilders","dismissIcon","Icon","name","onClick","handleDismiss","autoGenerateKey","isNil_default","react","Greeting","state","firstName","handleInputChange","event","_this$setState","target","setState","handleSubmit","preventDefault","render","Form","onSubmit","Label","pointing","class","Input","transparent","fluid","placeholder","type","onChange","React","Component","IndexPage","Fragment","Grid","Column","mobile","tablet","computer","greeting_Greeting","href","Divider","section","projectGrid","thoughtGrid","experimentGrid","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","query","data","ExperimentGrid","assign","_public_static_d_1204415294_json__WEBPACK_IMPORTED_MODULE_1__","_ref","experiments","allMarkdownRemark","edges","semantic_ui_react__WEBPACK_IMPORTED_MODULE_5__","filter","experiment","node","frontmatter","title","map","_ref2","id","gatsby_link__WEBPACK_IMPORTED_MODULE_3___default","to","path","gatsby_image__WEBPACK_IMPORTED_MODULE_7___default","cover","childImageSharp","date","subtitle","semantic_ui_react__WEBPACK_IMPORTED_MODULE_6__","ThoughtGrid","_public_static_d_3675488139_json__WEBPACK_IMPORTED_MODULE_1__","posts","post","excerpt"],"mappings":"gaASA,SAAAA,EAAAC,GACA,IAAAC,EAAAD,EAAAC,SACAC,EAAAF,EAAAE,UACAC,EAAAH,EAAAG,QACAC,EAAgBC,IAAE,UAAAH,GAClBI,EAAaC,OAAAC,EAAA,EAAAD,CAAiBR,EAAAC,GAC9BS,EAAoBF,OAAAG,EAAA,EAAAH,CAAcR,EAAAC,GAClC,OAASW,EAAAC,EAAKC,cAAAJ,EAA4BK,IAAQ,GAAGR,EAAA,CACrDJ,UAAAE,IACMW,EAAA,EAAaC,MAAAf,GAAAE,EAAAF,GAGnBF,EAAAkB,aAAA,wCACAlB,EAAAmB,UAYC,GACc,IAAAC,EAAA,EC1Bf,SAAAC,EAAApB,GACA,IAAAC,EAAAD,EAAAC,SACAC,EAAAF,EAAAE,UACAC,EAAAH,EAAAG,QACAC,EAAgBC,IAAE,SAAAH,GAClBI,EAAaC,OAAAC,EAAA,EAAAD,CAAiBa,EAAApB,GAC9BS,EAAoBF,OAAAG,EAAA,EAAAH,CAAca,EAAApB,GAClC,OAASW,EAAAC,EAAKC,cAAAJ,EAA4BK,IAAQ,GAAGR,EAAA,CACrDJ,UAAAE,IACMW,EAAA,EAAaC,MAAAf,GAAAE,EAAAF,GAGnBmB,EAAAH,aAAA,wCACAG,EAAAF,UAYC,GACDE,EAAAC,OAAuBd,OAAAe,EAAA,EAAAf,CAAsBa,EAAA,SAAAG,GAC7C,OACApB,QAAAoB,KAGe,IAAAC,EAAA,mBC/Bf,SAAAC,EAAAzB,GACA,IAAAC,EAAAD,EAAAC,SACAC,EAAAF,EAAAE,UACAC,EAAAH,EAAAG,QACAC,EAAgBC,IAAE,UAAAH,GAClBI,EAAaC,OAAAC,EAAA,EAAAD,CAAiBkB,EAAAzB,GAC9BS,EAAoBF,OAAAG,EAAA,EAAAH,CAAckB,EAAAzB,GAClC,OAASW,EAAAC,EAAKC,cAAAJ,EAA4BK,IAAQ,GAAGR,EAAA,CACrDJ,UAAAE,IACMW,EAAA,EAAaC,MAAAf,GAAAE,EAAAF,GAGnBwB,EAAAR,aAAA,wCACAQ,EAAAP,UAYC,GACDO,EAAAC,aAAA,CACAC,GAAA,MAEAF,EAAAJ,OAAqBd,OAAAe,EAAA,EAAAf,CAAsBkB,EAAA,SAAAtB,GAC3C,OACAA,aAGe,IAAAyB,EAAA,EChCf,SAAAC,EAAA7B,GACA,IAAAC,EAAAD,EAAAC,SACAC,EAAAF,EAAAE,UACA4B,EAAA9B,EAAA8B,MACA1B,EAAgBC,IAAE,OAAAH,GAClBI,EAAaC,OAAAC,EAAA,EAAAD,CAAiBsB,EAAA7B,GAC9BS,EAAoBF,OAAAG,EAAA,EAAAH,CAAcsB,EAAA7B,GAClC,OAASW,EAAAC,EAAKC,cAAAJ,EAA4BK,IAAQ,GAAGR,EAAA,CACrDJ,UAAAE,IACMW,EAAA,EAAaC,MAAAf,GAAmB8B,IAAID,EAAQF,EAAWP,QAAApB,GAG7D4B,EAAAZ,aAAA,sCACAY,EAAAX,UAYC,GACDW,EAAAH,aAAA,CACAC,GAAA,MAEAE,EAAAR,OAAqBd,OAAAe,EAAA,EAAAf,CAAsBsB,EAAA,SAAAN,GAC3C,OACAO,MAAAP,KAGe,IAAAS,EAAA,ECrBXC,EAEJ,SAAAC,GAGA,SAAAC,IACA,IAAAC,EAEAC,EAEIC,IAAeC,KAAAJ,GAEnB,QAAAK,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAuEA,EAAAL,EAAaK,IACpFF,EAAAE,GAAAJ,UAAAI,GAUA,OAPAR,EAAYS,IAA0BP,MAAAH,EAA2BW,IAAeZ,IAAAa,KAAAC,MAAAb,EAAA,CAAAG,MAAAW,OAAAP,KAE5EQ,IAAgBC,IAAuBA,IAAsBf,IAAA,yBAAAgB,GACjE,IAAAC,EAAAjB,EAAArC,MAAAsD,UACAA,KAAAD,EAAAhB,EAAArC,SAGAqC,EAuDA,OA3EEkB,IAASpB,EAAAD,GAuBTsB,IAAYrB,EAAA,EACdsB,IAAA,SACAC,MAAA,WACA,IAAAC,EAAApB,KAAAvC,MACA4D,EAAAD,EAAAC,SACA3D,EAAA0D,EAAA1D,SACAC,EAAAyD,EAAAzD,UACA2D,EAAAF,EAAAE,MACAC,EAAAH,EAAAG,QACA3D,EAAAwD,EAAAxD,QACA4D,EAAAJ,EAAAI,MACAC,EAAAL,EAAAK,SACAC,EAAAN,EAAAM,OACAC,EAAAP,EAAAO,OACAC,EAAAR,EAAAQ,KACAC,EAAAT,EAAAS,KACAC,EAAAV,EAAAU,KACAC,EAAAX,EAAAW,SACAhB,EAAAK,EAAAL,UACAiB,EAAAZ,EAAAY,SACAC,EAAAb,EAAAa,KACAC,EAAAd,EAAAc,QACAC,EAAAf,EAAAe,QACAC,EAAAhB,EAAAgB,QACAvE,EAAoBC,IAAE,KAAAwD,EAAAW,EAAoBjE,OAAAqE,EAAA,EAAArE,CAAUuD,EAAA,WAAsBvD,OAAAqE,EAAA,EAAArE,CAAUwD,EAAA,SAAkBxD,OAAAqE,EAAA,EAAArE,CAAUyD,EAAA,YAAwBzD,OAAAqE,EAAA,EAAArE,CAAU2D,EAAA,UAAoB3D,OAAAqE,EAAA,EAAArE,CAAU4D,EAAA,QAAgB5D,OAAAqE,EAAA,EAAArE,CAAU6D,EAAA,QAAgB7D,OAAAqE,EAAA,EAAArE,CAAU+D,EAAA,YAAwB/D,OAAAqE,EAAA,EAAArE,CAAUgE,EAAA,YAAwBhE,OAAAqE,EAAA,EAAArE,CAAUkE,EAAA,WAAsBlE,OAAAqE,EAAA,EAAArE,CAAUmE,EAAA,WAAsBnE,OAAAqE,EAAA,EAAArE,CAAUoE,EAAA,WAAsBpE,OAAAqE,EAAA,EAAArE,CAAmBqD,EAAA,sBAAA1D,GACjZ2E,EAAAvB,GAAqC3C,EAAAC,EAAKC,cAAeiE,EAAA,EAAI,CAC7DC,KAAA,QACAC,QAAAzC,KAAA0C,gBAEA3E,EAAiBC,OAAAC,EAAA,EAAAD,CAAiB4B,EAAAI,KAAAvC,OAClCS,EAAwBF,OAAAG,EAAA,EAAAH,CAAc4B,EAAAI,KAAAvC,OAEtC,OAAWe,EAAA,EAAaC,MAAAf,GAMXU,EAAAC,EAAKC,cAAAJ,EAA4BK,IAAQ,GAAGR,EAAA,CACzDJ,UAAAE,IACOyE,EAAgBC,EAAA,EAAIzD,OAAA8C,EAAA,CAC3Be,iBAAA,MACYC,IAAMlB,KAAakB,IAAMhF,KAAcgF,IAAMd,KAAW1D,EAAAC,EAAKC,cAAeM,EAAc,KAAQK,EAAaH,OAAA4C,EAAA,CAC3HiB,iBAAA,IACUlD,EAAWX,OAAAgD,EAAA,CACrBa,iBAAA,IACU3E,OAAAe,EAAA,EAAAf,CAAmBJ,EAAA,CAC7B+E,iBAAA,MAdevE,EAAAC,EAAKC,cAAAJ,EAA4BK,IAAQ,GAAGR,EAAA,CAC3DJ,UAAAE,IACSyE,EAAA5E,OAiBTkC,EA5EA,CA6EEiD,EAAA,WAEFjC,IAAgBlB,EAAO,UAAad,GAEpCgC,IAAgBlB,EAAO,SAAYT,GAEnC2B,IAAgBlB,EAAO,OAAUD,GAEjCmB,IAAgBlB,EAAO,OAAUL,GAEjCuB,IAAgBlB,EAAO,sNAGvBA,EAAOf,UAqEN,cCtLoBmE,sJACnBC,MAAQ,CACNC,UAAW,GACXrB,QAAQ,KAGVsB,kBAAoB,SAAAC,GAAS,IAAAC,EACrBC,EAASF,EAAME,OACfjC,EAAQiC,EAAOjC,MACfqB,EAAOY,EAAOZ,KAEpB1C,EAAKuD,WAALF,EAAA,IACGX,GAAOrB,EADVgC,OAKFG,aAAe,SAAAJ,GACEA,EAAME,OACCzB,OACtBuB,EAAMK,iBACNzD,EAAKuD,SAAS,CACZ1B,QAAQ,mCAIZ6B,OAAA,WACE,OACEpF,EAAAC,EAAAC,cAACmF,EAAA,EAAD,CAAMC,SAAU1D,KAAKsD,cACnBlF,EAAAC,EAAAC,cAACqF,EAAA,EAAD,CAAOC,SAAS,SAAhB,yBAEExF,EAAAC,EAAAC,cAAA,OAAKuF,MAAM,mBACTzF,EAAAC,EAAAC,cAACwF,EAAA,EAAD,CACEC,aAAW,EACXC,OAAK,EACLC,YAAY,aACZC,KAAK,OACL1B,KAAK,YACLrB,MAAOnB,KAAK+C,MAAMC,UAClBmB,SAAUnE,KAAKiD,kBACfS,SAAU1D,KAAKsD,eACd,MAIPlF,EAAAC,EAAAC,cAACoB,EAAD,CAASuC,KAAK,OAAOV,SAAO,EAACI,OAAQ3B,KAAK+C,MAAMpB,QAC9CvD,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,sBAAc0B,KAAK+C,MAAMC,UAAzB,0BADF,mHA7C4BoB,IAAMC,sCCwH7BC,UAnHG,kBAChBlG,EAAAC,EAAAC,cAAAF,EAAAC,EAAAkG,SAAA,KACEnG,EAAAC,EAAAC,cAACkG,EAAA,EAAD,KACEpG,EAAAC,EAAAC,cAACkG,EAAA,EAAKC,OAAN,CAAaC,OAAQ,GAAIC,OAAQ,EAAGC,SAAU,IAC9CxG,EAAAC,EAAAC,cAACkG,EAAA,EAAKC,OAAN,CAAaC,OAAQ,GAAIC,OAAQ,EAAGC,SAAU,GAC5CxG,EAAAC,EAAAC,cAAA,OAAKuF,MAAM,OACTzF,EAAAC,EAAAC,cAAA,MAAIuF,MAAM,YAAV,0BAKNzF,EAAAC,EAAAC,cAACkG,EAAA,EAAD,KACEpG,EAAAC,EAAAC,cAACkG,EAAA,EAAKC,OAAN,CAAaC,OAAQ,GAAIC,OAAQ,EAAGC,SAAU,GAC5CxG,EAAAC,EAAAC,cAACuG,EAAD,MACAzG,EAAAC,EAAAC,cAAA,KAAGuF,MAAM,QAAT,uDAEEzF,EAAAC,EAAAC,cAAA,WAFF,IAESF,EAAAC,EAAAC,cAAA,WAFT,+DAOFF,EAAAC,EAAAC,cAACkG,EAAA,EAAKC,OAAN,CAAaC,OAAQ,GAAIC,OAAQ,EAAGC,SAAU,GAC5CxG,EAAAC,EAAAC,cAAA,sHAIAF,EAAAC,EAAAC,cAAA,4FAEY,IACVF,EAAAC,EAAAC,cAAA,KAAGuF,MAAM,WAAWiB,KAAK,cAAzB,mBAIF1G,EAAAC,EAAAC,cAAA,+EAEEF,EAAAC,EAAAC,cAAA,KAAGuF,MAAM,WAAWiB,KAAK,8BACtB,IADH,WAFF,yFAeF1G,EAAAC,EAAAC,cAACkG,EAAA,EAAKC,OAAN,CAAaC,OAAQ,GAAIC,OAAQ,EAAGC,SAAU,GAC5CxG,EAAAC,EAAAC,cAAA,qCAC4B,IAC1BF,EAAAC,EAAAC,cAAA,KAAGuF,MAAM,WAAWiB,KAAK,qBAAzB,WAEK,IAJP,+CAK+C,IAC7C1G,EAAAC,EAAAC,cAAA,KAAGuF,MAAM,WAAWiB,KAAK,8BAAzB,uBACuB,KAPzB,iCAWA1G,EAAAC,EAAAC,cAAA,+BACsB,IACpBF,EAAAC,EAAAC,cAAA,KAAGuF,MAAM,WAAWiB,KAAK,cAAzB,yBAEK,IAJP,4EAQA1G,EAAAC,EAAAC,cAAA,yJAGY,MAGdF,EAAAC,EAAAC,cAACkG,EAAA,EAAKC,OAAN,CAAaC,OAAQ,GAAIC,OAAQ,EAAGC,SAAU,GAC5CxG,EAAAC,EAAAC,cAAA,oHAIAF,EAAAC,EAAAC,cAAA,oIAIAF,EAAAC,EAAAC,cAAA,6DACoD,IAClDF,EAAAC,EAAAC,cAAA,KACEuF,MAAM,WACNiB,KAAK,+CAFP,YAFF,KAQK,IACH1G,EAAAC,EAAAC,cAAA,KAAGuF,MAAM,WAAWiB,KAAK,4CAAzB,aATF,0BAaE1G,EAAAC,EAAAC,cAAA,KACEuF,MAAM,WACNiB,KAAK,iDAFP,2BAbF,QAsBF1G,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CAASC,SAAO,EAACrD,QAAM,IACvBvD,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,MACA7G,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CAASC,SAAO,EAACrD,QAAM,IACvBvD,EAAAC,EAAAC,cAAC4G,EAAA,EAAD,MACA9G,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CAASC,SAAO,EAACrD,QAAM,IACvBvD,EAAAC,EAAAC,cAAC6G,EAAA,EAAD,2IChHSC,EAAA,WAAA3H,GAAK,OAClB4H,EAAAhH,EAAAC,cAACgH,EAAA,YAAD,CACEC,MAAK,aA4BL/B,OAAQ,SAAAgC,GAAI,OAAIH,EAAAhH,EAAAC,cAACmH,EAADzH,OAAA0H,OAAA,CAAgBF,KAAMA,GAAU/H,KA7BlD+H,KAAAG,KAiCF,IAAMF,EAAiB,SAAAG,GAAc,IACpBC,EADoBD,EAAXJ,KACYM,kBAA5BC,MACR,OACEV,EAAAhH,EAAAC,cAAC0H,EAAA,EAAD,KACEX,EAAAhH,EAAAC,cAAC0H,EAAA,EAAKvB,OAAN,CAAaC,OAAQ,EAAGC,OAAQ,EAAGC,SAAU,IAC7CS,EAAAhH,EAAAC,cAAC0H,EAAA,EAAKvB,OAAN,CAAaC,OAAQ,GAAIC,OAAQ,EAAGC,SAAU,GAC5CS,EAAAhH,EAAAC,cAAA,MAAIuF,MAAM,UAAV,iBAEFwB,EAAAhH,EAAAC,cAAC0H,EAAA,EAAKvB,OAAN,CAAaC,OAAQ,EAAGC,OAAQ,EAAGC,SAAU,GAC3CS,EAAAhH,EAAAC,cAAA,MAAIuF,MAAM,QACRwB,EAAAhH,EAAAC,cAAA,gCACA+G,EAAAhH,EAAAC,cAAA,8DACA+G,EAAAhH,EAAAC,cAAA,uBACA+G,EAAAhH,EAAAC,cAAA,sCACA+G,EAAAhH,EAAAC,cAAA,gCACA+G,EAAAhH,EAAAC,cAAA,sCAGJ+G,EAAAhH,EAAAC,cAAC0H,EAAA,EAAKvB,OAAN,CAAaC,OAAQ,GAAIC,OAAQ,EAAGC,SAAU,GAC5CS,EAAAhH,EAAAC,cAAA,OAAKX,UAAU,eACb0H,EAAAhH,EAAAC,cAAC0H,EAAA,EAAD,KACGH,EACEI,OACC,SAAAC,GAAU,OAAIA,EAAWC,KAAKC,YAAYC,MAAMlG,OAAS,IAE1DmG,IAAI,SAAAC,GAA0B,IAAjBL,EAAiBK,EAAvBJ,KACN,OACEd,EAAAhH,EAAAC,cAAC0H,EAAA,EAAKvB,OAAN,CAAaC,OAAQ,GAAIC,OAAQ,EAAGC,SAAU,GAC5CS,EAAAhH,EAAAC,cAAA,OAAKX,UAAU,kBAAkBuD,IAAKgF,EAAWM,IAC/CnB,EAAAhH,EAAAC,cAAA,OAAKuF,MAAM,UACTwB,EAAAhH,EAAAC,cAACmI,EAAApI,EAAD,CAAMqI,GAAIR,EAAWE,YAAYO,KAAM9C,MAAM,YAC3CwB,EAAAhH,EAAAC,cAACsI,EAAAvI,EAAD,CACEV,UAAU,YACVqG,MACEkC,EAAWE,YAAYS,MAAMC,gBAAgB9C,UAKrDqB,EAAAhH,EAAAC,cAAA,KAAGuF,MAAM,QAAQqC,EAAWE,YAAYW,MACxC1B,EAAAhH,EAAAC,cAAA,MAAIuF,MAAM,SACP,IACDwB,EAAAhH,EAAAC,cAACmI,EAAApI,EAAD,CAAMqI,GAAIR,EAAWE,YAAYO,KAAM9C,MAAM,YAC1CqC,EAAWE,YAAYC,QAI5BhB,EAAAhH,EAAAC,cAAA,KAAGuF,MAAM,WAAWqC,EAAWE,YAAYY,iBAQ3D3B,EAAAhH,EAAAC,cAAC2I,EAAA,EAAD,CAAStF,QAAM,y0MCzFNyD,EAAA,WAAA3H,GAAK,OAClB4H,EAAAhH,EAAAC,cAACgH,EAAA,YAAD,CACEC,MAAK,aA4BL/B,OAAQ,SAAAgC,GAAI,OAAIH,EAAAhH,EAAAC,cAAC4I,EAADlJ,OAAA0H,OAAA,CAAaF,KAAMA,GAAU/H,KA7B/C+H,KAAA2B,KAiCF,IAAMD,EAAc,SAAAtB,GAAc,IACjBwB,EADiBxB,EAAXJ,KACSM,kBAAtBC,MACR,OACEV,EAAAhH,EAAAC,cAAC0H,EAAA,EAAD,KACEX,EAAAhH,EAAAC,cAAC0H,EAAA,EAAKvB,OAAN,CAAaC,OAAQ,EAAGC,OAAQ,EAAGC,SAAU,IAC7CS,EAAAhH,EAAAC,cAAC0H,EAAA,EAAKvB,OAAN,CAAaC,OAAQ,GAAIC,OAAQ,EAAGC,SAAU,GAC5CS,EAAAhH,EAAAC,cAAA,OAAKX,UAAU,cACb0H,EAAAhH,EAAAC,cAAA,MAAIuF,MAAM,UAAV,aACAwB,EAAAhH,EAAAC,cAAC0H,EAAA,EAAD,KACGoB,EACEnB,OAAO,SAAAoB,GAAI,OAAIA,EAAKlB,KAAKC,YAAYC,MAAMlG,OAAS,IACpDmG,IAAI,SAAAC,GAAoB,IAAXc,EAAWd,EAAjBJ,KACN,OACEd,EAAAhH,EAAAC,cAAC0H,EAAA,EAAKvB,OAAN,CAAaC,OAAQ,GAAIC,OAAQ,EAAGC,SAAU,GAC5CS,EAAAhH,EAAAC,cAAA,OAAKX,UAAU,eAAeuD,IAAKmG,EAAKb,IACtCnB,EAAAhH,EAAAC,cAAA,OAAKuF,MAAM,UACTwB,EAAAhH,EAAAC,cAACmI,EAAApI,EAAD,CAAMqI,GAAIW,EAAKjB,YAAYO,KAAM9C,MAAM,YACrCwB,EAAAhH,EAAAC,cAACsI,EAAAvI,EAAD,CACEV,UAAU,YACVqG,MAAOqD,EAAKjB,YAAYS,MAAMC,gBAAgB9C,UAIpDqB,EAAAhH,EAAAC,cAAA,KAAGuF,MAAM,QAAQwD,EAAKjB,YAAYW,MAClC1B,EAAAhH,EAAAC,cAAA,MAAIuF,MAAM,SACP,IACDwB,EAAAhH,EAAAC,cAACmI,EAAApI,EAAD,CAAMqI,GAAIW,EAAKjB,YAAYO,KAAM9C,MAAM,YACpCwD,EAAKjB,YAAYC,QAItBhB,EAAAhH,EAAAC,cAAA,SAAI+I,EAAKC,gBAQzBjC,EAAAhH,EAAAC,cAAC2I,EAAA,EAAD,CAAStF,QAAM","file":"component---src-pages-index-js-c0d29906388f679cd8be.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A message can contain a content.\n */\n\nfunction MessageContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('content', className);\n  var rest = getUnhandledProps(MessageContent, props);\n  var ElementType = getElementType(MessageContent, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nMessageContent.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nMessageContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nexport default MessageContent;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A message can contain a header.\n */\n\nfunction MessageHeader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('header', className);\n  var rest = getUnhandledProps(MessageHeader, props);\n  var ElementType = getElementType(MessageHeader, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nMessageHeader.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nMessageHeader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nMessageHeader.create = createShorthandFactory(MessageHeader, function (val) {\n  return {\n    content: val\n  };\n});\nexport default MessageHeader;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A message list can contain an item.\n */\n\nfunction MessageItem(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('content', className);\n  var rest = getUnhandledProps(MessageItem, props);\n  var ElementType = getElementType(MessageItem, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nMessageItem.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nMessageItem.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nMessageItem.defaultProps = {\n  as: 'li'\n};\nMessageItem.create = createShorthandFactory(MessageItem, function (content) {\n  return {\n    content: content\n  };\n});\nexport default MessageItem;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _map from \"lodash/map\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\nimport MessageItem from './MessageItem';\n/**\n * A message can contain a list of items.\n */\n\nfunction MessageList(props) {\n  var children = props.children,\n      className = props.className,\n      items = props.items;\n  var classes = cx('list', className);\n  var rest = getUnhandledProps(MessageList, props);\n  var ElementType = getElementType(MessageList, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? _map(items, MessageItem.create) : children);\n}\n\nMessageList.handledProps = [\"as\", \"children\", \"className\", \"items\"];\nMessageList.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand Message.Items. */\n  items: customPropTypes.collectionShorthand\n} : {};\nMessageList.defaultProps = {\n  as: 'ul'\n};\nMessageList.create = createShorthandFactory(MessageList, function (val) {\n  return {\n    items: val\n  };\n});\nexport default MessageList;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _isNil from \"lodash/isNil\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { childrenUtils, createHTMLParagraph, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey } from '../../lib';\nimport Icon from '../../elements/Icon';\nimport MessageContent from './MessageContent';\nimport MessageHeader from './MessageHeader';\nimport MessageList from './MessageList';\nimport MessageItem from './MessageItem';\n/**\n * A message displays information that explains nearby content.\n * @see Form\n */\n\nvar Message =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Message, _Component);\n\n  function Message() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Message);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Message)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleDismiss\", function (e) {\n      var onDismiss = _this.props.onDismiss;\n      if (onDismiss) onDismiss(e, _this.props);\n    });\n\n    return _this;\n  }\n\n  _createClass(Message, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          attached = _this$props.attached,\n          children = _this$props.children,\n          className = _this$props.className,\n          color = _this$props.color,\n          compact = _this$props.compact,\n          content = _this$props.content,\n          error = _this$props.error,\n          floating = _this$props.floating,\n          header = _this$props.header,\n          hidden = _this$props.hidden,\n          icon = _this$props.icon,\n          info = _this$props.info,\n          list = _this$props.list,\n          negative = _this$props.negative,\n          onDismiss = _this$props.onDismiss,\n          positive = _this$props.positive,\n          size = _this$props.size,\n          success = _this$props.success,\n          visible = _this$props.visible,\n          warning = _this$props.warning;\n      var classes = cx('ui', color, size, useKeyOnly(compact, 'compact'), useKeyOnly(error, 'error'), useKeyOnly(floating, 'floating'), useKeyOnly(hidden, 'hidden'), useKeyOnly(icon, 'icon'), useKeyOnly(info, 'info'), useKeyOnly(negative, 'negative'), useKeyOnly(positive, 'positive'), useKeyOnly(success, 'success'), useKeyOnly(visible, 'visible'), useKeyOnly(warning, 'warning'), useKeyOrValueAndKey(attached, 'attached'), 'message', className);\n      var dismissIcon = onDismiss && React.createElement(Icon, {\n        name: \"close\",\n        onClick: this.handleDismiss\n      });\n      var rest = getUnhandledProps(Message, this.props);\n      var ElementType = getElementType(Message, this.props);\n\n      if (!childrenUtils.isNil(children)) {\n        return React.createElement(ElementType, _extends({}, rest, {\n          className: classes\n        }), dismissIcon, children);\n      }\n\n      return React.createElement(ElementType, _extends({}, rest, {\n        className: classes\n      }), dismissIcon, Icon.create(icon, {\n        autoGenerateKey: false\n      }), (!_isNil(header) || !_isNil(content) || !_isNil(list)) && React.createElement(MessageContent, null, MessageHeader.create(header, {\n        autoGenerateKey: false\n      }), MessageList.create(list, {\n        autoGenerateKey: false\n      }), createHTMLParagraph(content, {\n        autoGenerateKey: false\n      })));\n    }\n  }]);\n\n  return Message;\n}(Component);\n\n_defineProperty(Message, \"Content\", MessageContent);\n\n_defineProperty(Message, \"Header\", MessageHeader);\n\n_defineProperty(Message, \"List\", MessageList);\n\n_defineProperty(Message, \"Item\", MessageItem);\n\n_defineProperty(Message, \"handledProps\", [\"as\", \"attached\", \"children\", \"className\", \"color\", \"compact\", \"content\", \"error\", \"floating\", \"header\", \"hidden\", \"icon\", \"info\", \"list\", \"negative\", \"onDismiss\", \"positive\", \"size\", \"success\", \"visible\", \"warning\"]);\n\nexport { Message as default };\nMessage.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A message can be formatted to attach itself to other content. */\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['bottom', 'top'])]),\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A message can be formatted to be different colors. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** A message can only take up the width of its content. */\n  compact: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A message may be formatted to display a negative message. Same as `negative`. */\n  error: PropTypes.bool,\n\n  /** A message can float above content that it is related to. */\n  floating: PropTypes.bool,\n\n  /** Shorthand for MessageHeader. */\n  header: customPropTypes.itemShorthand,\n\n  /** A message can be hidden. */\n  hidden: PropTypes.bool,\n\n  /** A message can contain an icon. */\n  icon: PropTypes.oneOfType([customPropTypes.itemShorthand, PropTypes.bool]),\n\n  /** A message may be formatted to display information. */\n  info: PropTypes.bool,\n\n  /** Array shorthand items for the MessageList. Mutually exclusive with children. */\n  list: customPropTypes.collectionShorthand,\n\n  /** A message may be formatted to display a negative message. Same as `error`. */\n  negative: PropTypes.bool,\n\n  /**\n   * A message that the user can choose to hide.\n   * Called when the user clicks the \"x\" icon. This also adds the \"x\" icon.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onDismiss: PropTypes.func,\n\n  /** A message may be formatted to display a positive message.  Same as `success`. */\n  positive: PropTypes.bool,\n\n  /** A message can have different sizes. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'medium')),\n\n  /** A message may be formatted to display a positive message.  Same as `positive`. */\n  success: PropTypes.bool,\n\n  /** A message can be set to visible to force itself to be shown. */\n  visible: PropTypes.bool,\n\n  /** A message may be formatted to display warning messages. */\n  warning: PropTypes.bool\n} : {};","import React from 'react'\nimport { Form, Input, Label, Message } from 'semantic-ui-react'\nimport './greeting.css'\nexport default class Greeting extends React.Component {\n  state = {\n    firstName: '',\n    hidden: true,\n  }\n\n  handleInputChange = event => {\n    const target = event.target\n    const value = target.value\n    const name = target.name\n\n    this.setState({\n      [name]: value,\n    })\n  }\n\n  handleSubmit = event => {\n    const target = event.target\n    const hidden = target.hidden\n    event.preventDefault()\n    this.setState({\n      hidden: false,\n    })\n  }\n\n  render() {\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Label pointing=\"right\">\n          Hey! What's your name?\n          <div class=\"input-underline\">\n            <Input\n              transparent\n              fluid\n              placeholder=\"First Name\"\n              type=\"text\"\n              name=\"firstName\"\n              value={this.state.firstName}\n              onChange={this.handleInputChange}\n              onSubmit={this.handleSubmit}\n            />{' '}\n          </div>\n        </Label>\n\n        <Message size=\"mini\" compact hidden={this.state.hidden}>\n          <p>\n            <strong> Hey {this.state.firstName}, welcome to my site. </strong>\n            Take a look around and leave me a message in the bottom ight if\n            you'd like to chat or have any questions!\n          </p>\n        </Message>\n      </Form>\n    )\n  }\n}\n","import React from 'react'\nimport { Button, input, Grid, Form, Divider } from 'semantic-ui-react'\n\nimport Greeting from '../components/greeting'\nimport ProjectGrid from '../components/gridBlocks/projectGrid'\nimport ThoughtGrid from '../components/gridBlocks/thoughtGrid'\nimport ExperimentGrid from '../components/gridBlocks/experimentGrid'\n\nconst IndexPage = () => (\n  <>\n    <Grid>\n      <Grid.Column mobile={12} tablet={3} computer={3} />\n      <Grid.Column mobile={12} tablet={9} computer={9}>\n        <div class=\"box\">\n          <h1 class=\"header-1\">Design with Intent.</h1>\n        </div>\n      </Grid.Column>\n    </Grid>\n\n    <Grid>\n      <Grid.Column mobile={12} tablet={3} computer={3}>\n        <Greeting />\n        <p class=\"left\">\n          Currently looking for a full-time summer internship.\n          <br /> <br />\n          Not able to currently accept long-term freelance projects.\n        </p>\n      </Grid.Column>\n\n      <Grid.Column mobile={12} tablet={3} computer={3}>\n        <p>\n          Hey! My name is Garrett Vercoe and I use data science and design to\n          solve problems in the community. 🇺🇸\n        </p>\n        <p>\n          Currently a third year at the University of Virginia pursuing a double\n          major. ⚡️{' '}\n          <a class=\"bodyLink\" href=\"google.com\">\n            View my resume\n          </a>\n        </p>\n        <p>\n          I currently am Head of Design at a Charlottesville creative agency,\n          <a class=\"bodyLink\" href=\"https://thisisradical.com/\">\n            {' '}\n            Radical\n          </a>\n          , and serve on the board of directors to help oversee our great 20+\n          employees. 👨‍💻\n        </p>\n        {/* <div class=\"icon chart\">\n          <i />\n          <i />\n          <i />\n        </div> */}\n      </Grid.Column>\n      <Grid.Column mobile={12} tablet={3} computer={3}>\n        <p>\n          In the past, I've been at{' '}\n          <a class=\"bodyLink\" href=\"https://parse.ly/\">\n            Parsely\n          </a>{' '}\n          as a Data Scientist intern, and prototyped a{' '}\n          <a class=\"bodyLink\" href=\"https://thisisradical.com/\">\n            web application tool{' '}\n          </a>\n          using petabyte-scale data. 📈\n        </p>\n        <p>\n          I've also created a{' '}\n          <a class=\"bodyLink\" href=\"/fire-risk\">\n            machine learning tool\n          </a>{' '}\n          for the fire department which locates buildings at high risk of fire.\n          🚒\n        </p>\n        <p>\n          Right now, I'm working with several clients on web-development\n          projects — from a restaurant in France 🇫🇷 to a pilates studio site\n          redesign.{' '}\n        </p>\n      </Grid.Column>\n      <Grid.Column mobile={12} tablet={3} computer={3}>\n        <p>\n          For development I'm comfortable with Python, React, D3, CSS, C++,\n          Java, x86 assembly, SQL, and GraphQL.\n        </p>\n        <p>\n          For design, I'm proficient in Photoshop, Illustrator, InDesign, XD,\n          After Effects, Figma, AutoCAD, Cinema4D, and Rhino.\n        </p>\n        <p>\n          If you've read this far, let's connect. Say hi on{' '}\n          <a\n            class=\"bodyLink\"\n            href=\"https://www.linkedin.com/in/garrett-vercoe/\"\n          >\n            LinkedIn\n          </a>\n          , {' '}\n          <a class=\"bodyLink\" href=\"https://www.instagram.com/garrettvercoe/\">\n            Instagram\n          </a>\n          , or send a message to \n          <a\n            class=\"bodyLink\"\n            href=\"mailto:hello@garrettvercoe.com?Subject=Hello!\"\n          >\n            hello@garrettvercoe.com\n          </a>\n          .💯\n        </p>\n      </Grid.Column>\n      <Divider section hidden />\n      <ProjectGrid />\n      <Divider section hidden />\n      <ThoughtGrid />\n      <Divider section hidden />\n      <ExperimentGrid />\n    </Grid>\n  </>\n)\n\nexport default IndexPage\n","import React from 'react'\nimport Link from 'gatsby-link'\nimport { StaticQuery, graphql } from 'gatsby'\nimport { Grid, Divider } from 'semantic-ui-react'\nimport Img from 'gatsby-image'\n\nexport default props => (\n  <StaticQuery\n    query={graphql`\n      query experimentGridQuery {\n        allMarkdownRemark(\n          sort: { order: DESC, fields: [frontmatter___date] }\n          filter: { fileAbsolutePath: { regex: \"/(experiments)/.*.md$/\" } }\n        ) {\n          edges {\n            node {\n              excerpt(pruneLength: 100)\n              id\n              frontmatter {\n                title\n                subtitle\n                date(formatString: \"MMMM DD, YYYY\")\n                path\n                cover {\n                  childImageSharp {\n                    fluid(maxWidth: 700) {\n                      ...GatsbyImageSharpFluid\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={data => <ExperimentGrid data={data} {...props} />}\n  />\n)\n\nconst ExperimentGrid = ({ data }) => {\n  const { edges: experiments } = data.allMarkdownRemark\n  return (\n    <Grid>\n      <Grid.Column mobile={0} tablet={3} computer={3} />\n      <Grid.Column mobile={12} tablet={9} computer={9}>\n        <h3 class=\"header\">Experiments.</h3>\n      </Grid.Column>\n      <Grid.Column mobile={0} tablet={3} computer={3}>\n        <ul class=\"left\">\n          <li>Data Visualization</li>\n          <li> Machine Learning, Data Analysis, Data Cleaning </li>\n          <li>UX Design</li>\n          <li>Web Design + Development</li>\n          <li>Graphic + Branding</li>\n          <li>Architectural Services</li>\n        </ul>\n      </Grid.Column>\n      <Grid.Column mobile={12} tablet={9} computer={9}>\n        <div className=\"experiments\">\n          <Grid>\n            {experiments\n              .filter(\n                experiment => experiment.node.frontmatter.title.length > 0\n              )\n              .map(({ node: experiment }) => {\n                return (\n                  <Grid.Column mobile={12} tablet={6} computer={4}>\n                    <div className=\"project-preview\" key={experiment.id}>\n                      <div class=\"imgBox\">\n                        <Link to={experiment.frontmatter.path} class=\"itemLink\">\n                          <Img\n                            className=\"underline\"\n                            fluid={\n                              experiment.frontmatter.cover.childImageSharp.fluid\n                            }\n                          />\n                        </Link>\n                      </div>\n                      <p class=\"date\">{experiment.frontmatter.date}</p>\n                      <h4 class=\"noPad\">\n                        {' '}\n                        <Link to={experiment.frontmatter.path} class=\"itemLink\">\n                          {experiment.frontmatter.title}\n                        </Link>\n                      </h4>\n\n                      <p class=\"excerpt\">{experiment.frontmatter.subtitle}</p>\n                    </div>\n                  </Grid.Column>\n                )\n              })}\n          </Grid>\n        </div>\n      </Grid.Column>\n      <Divider hidden />\n    </Grid>\n  )\n}\n","import React from 'react'\nimport Link from 'gatsby-link'\nimport { StaticQuery, graphql } from 'gatsby'\nimport { Grid, Divider } from 'semantic-ui-react'\nimport Img from 'gatsby-image'\n\nexport default props => (\n  <StaticQuery\n    query={graphql`\n      query ThoughtGridQuery {\n        allMarkdownRemark(\n          sort: { order: DESC, fields: [frontmatter___date] }\n          filter: { fileAbsolutePath: { regex: \"/(thoughts)/.*.md$/\" } }\n        ) {\n          edges {\n            node {\n              excerpt(pruneLength: 100)\n              id\n              frontmatter {\n                title\n                date(formatString: \"MMMM DD, YYYY\")\n                path\n                subtitle\n                cover {\n                  childImageSharp {\n                    fluid(maxWidth: 700) {\n                      ...GatsbyImageSharpFluid\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={data => <ThoughtGrid data={data} {...props} />}\n  />\n)\n\nconst ThoughtGrid = ({ data }) => {\n  const { edges: posts } = data.allMarkdownRemark\n  return (\n    <Grid>\n      <Grid.Column mobile={0} tablet={3} computer={3} />\n      <Grid.Column mobile={12} tablet={9} computer={9}>\n        <div className=\"blog-posts\">\n          <h3 class=\"header\">Thoughts.</h3>\n          <Grid>\n            {posts\n              .filter(post => post.node.frontmatter.title.length > 0)\n              .map(({ node: post }) => {\n                return (\n                  <Grid.Column mobile={12} tablet={6} computer={4}>\n                    <div className=\"post-preview\" key={post.id}>\n                      <div class=\"imgBox\">\n                        <Link to={post.frontmatter.path} class=\"itemLink\">\n                          <Img\n                            className=\"underline\"\n                            fluid={post.frontmatter.cover.childImageSharp.fluid}\n                          />\n                        </Link>\n                      </div>\n                      <p class=\"date\">{post.frontmatter.date}</p>\n                      <h4 class=\"noPad\">\n                        {' '}\n                        <Link to={post.frontmatter.path} class=\"itemLink\">\n                          {post.frontmatter.title}\n                        </Link>\n                      </h4>\n\n                      <p>{post.excerpt}</p>\n                    </div>\n                  </Grid.Column>\n                )\n              })}\n          </Grid>\n        </div>\n      </Grid.Column>\n      <Divider hidden />\n    </Grid>\n  )\n}\n"],"sourceRoot":""}