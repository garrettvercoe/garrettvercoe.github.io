{"version":3,"sources":["webpack:///./src/templates/markdownTemplate.js","webpack:///./src/components/GLeft.js","webpack:///./src/components/GRight.js"],"names":["__webpack_require__","d","__webpack_exports__","Template","pageQuery","renderAst","rehypeReact","createElement","React","components","Compiler","_ref","project","data","markdownRemark","toMatch","fileAbsolutePath","section","exec","react_default","a","Fragment","className","Helmet_default","title","frontmatter","Grid","Column","mobile","tablet","computer","class","date","label","list","map","elem","gatsby_browser_entry","to","subtitle","htmlAst","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","semantic_ui_react__WEBPACK_IMPORTED_MODULE_1__","GLeft","children"],"mappings":"wMAAAA,EAAAC,EAAAC,EAAA,4BAAAC,IAAAH,EAAAC,EAAAC,EAAA,8BAAAE,IAWA,IAAMC,EAAY,IAAIC,IAAY,CAChCC,cAAeC,IAAMD,cACrBE,WAAY,KACXC,SAEY,SAASP,EAATQ,GAA4B,IACnCC,EADmCD,EAARE,KACZC,eAEfC,EAAUH,EAAQI,iBAClBC,EAFc,wBAEQC,KAAKH,GACjC,OACEI,EAAAC,EAAAb,cAAAY,EAAAC,EAAAC,SAAA,KACEF,EAAAC,EAAAb,cAAA,OAAKe,UAAU,qBACbH,EAAAC,EAAAb,cAACgB,EAAAH,EAAD,CAAQI,MAAK,GAAKZ,EAAQa,YAAYD,QACtCL,EAAAC,EAAAb,cAAA,OAAKe,UAAU,WACbH,EAAAC,EAAAb,cAACmB,EAAA,EAAD,KACEP,EAAAC,EAAAb,cAACmB,EAAA,EAAKC,OAAN,CAAaC,OAAQ,EAAGC,OAAQ,EAAGC,SAAU,GAC3CX,EAAAC,EAAAb,cAAA,OAAKwB,MAAM,iBACTZ,EAAAC,EAAAb,cAAA,KAAGwB,MAAM,kBAAT,QACAZ,EAAAC,EAAAb,cAAA,KAAGwB,MAAM,sBAAsBnB,EAAQa,YAAYO,MACnDb,EAAAC,EAAAb,cAAA,KAAGwB,MAAM,kBAAkBnB,EAAQa,YAAYQ,OAC9CrB,EAAQa,YAAYS,KAAKC,IAAI,SAAAC,GAAI,OAChCjB,EAAAC,EAAAb,cAAA,OAAKwB,MAAM,sBAAsBK,OAIvCjB,EAAAC,EAAAb,cAACmB,EAAA,EAAKC,OAAN,CAAaC,OAAQ,GAAIC,OAAQ,EAAGC,SAAU,GAC5CX,EAAAC,EAAAb,cAAA,OAAKwB,MAAM,cACTZ,EAAAC,EAAAb,cAAC8B,EAAA,KAAD,CAAMC,GAAIrB,EAAQ,GAAIc,MAAM,oBACzBd,EAAQ,IAEXE,EAAAC,EAAAb,cAAA,MAAIwB,MAAM,mBAAmBnB,EAAQa,YAAYD,OACjDL,EAAAC,EAAAb,cAAA,KAAGwB,MAAM,qBAAqBnB,EAAQa,YAAYc,WAEpDpB,EAAAC,EAAAb,cAAA,OAAKwB,MAAM,iBACTZ,EAAAC,EAAAb,cAACmB,EAAA,EAAD,KAAOrB,EAAUO,EAAQ4B,gBASlC,IAAMpC,EAAS,+CCvDtB,IAAAqC,EAAAzC,EAAA,GAAA0C,EAAA1C,EAAA2C,EAAAF,GAAAG,EAAA5C,EAAA,KAWe6C,IARD,SAAAlC,GAAkB,IAAfmC,EAAenC,EAAfmC,SACf,OACEJ,EAAAtB,EAAAb,cAACqC,EAAA,EAAKjB,OAAN,CAAaC,OAAQ,GAAIC,OAAQ,GAAIC,SAAU,GAC5CgB,sCCNP,IAAAL,EAAAzC,EAAA,GAAA0C,EAAA1C,EAAA2C,EAAAF,GAAAG,EAAA5C,EAAA,KAWe6C,IARD,SAAAlC,GAAkB,IAAfmC,EAAenC,EAAfmC,SACf,OACEJ,EAAAtB,EAAAb,cAACqC,EAAA,EAAKjB,OAAN,CAAaC,OAAQ,GAAIC,OAAQ,GAAIC,SAAU,GAC5CgB","file":"component---src-templates-markdown-template-js-1de866379d5c99657353.js","sourcesContent":["import React from 'react'\nimport Helmet from 'react-helmet'\nimport rehypeReact from 'rehype-react'\nimport { Grid } from 'semantic-ui-react'\nimport Img from 'gatsby-image'\nimport { Link } from 'gatsby'\nimport './markdown.css'\nimport Gleft from '../components/GLeft'\nimport Gright from '../components/GRight'\nimport Gthird from '../components/Gthird'\n\nconst renderAst = new rehypeReact({\n  createElement: React.createElement,\n  components: {},\n}).Compiler\n\nexport default function Template({ data }) {\n  const project = data.markdownRemark\n  const folderRegex = /(pages\\/)(.+)\\/(.*\\/)/\n  const toMatch = project.fileAbsolutePath\n  const section = folderRegex.exec(toMatch)\n  return (\n    <>\n      <div className=\"project-container\">\n        <Helmet title={`${project.frontmatter.title}`} />\n        <div className=\"project\">\n          <Grid>\n            <Grid.Column mobile={0} tablet={3} computer={3}>\n              <div class=\"markdown-info\">\n                <p class=\"markdown-label\">Date</p>\n                <p class=\"markdown-info-text\">{project.frontmatter.date}</p>\n                <p class=\"markdown-label\">{project.frontmatter.label}</p>\n                {project.frontmatter.list.map(elem => (\n                  <div class=\"markdown-info-text\">{elem}</div>\n                ))}\n              </div>\n            </Grid.Column>\n            <Grid.Column mobile={12} tablet={9} computer={9}>\n              <div class=\"header-box\">\n                <Link to={section[2]} class=\"markdown-section\">\n                  {section[2]}\n                </Link>\n                <h3 class=\"markdown-header\">{project.frontmatter.title}</h3>\n                <p class=\"markdown-subtitle\">{project.frontmatter.subtitle}</p>\n              </div>\n              <div class=\"markdown-body\">\n                <Grid>{renderAst(project.htmlAst)}</Grid>\n              </div>\n            </Grid.Column>\n          </Grid>\n        </div>\n      </div>\n    </>\n  )\n}\nexport const pageQuery = graphql`\n  query Project($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      htmlAst\n      fileAbsolutePath\n      frontmatter {\n        date(formatString: \"MMMM, YYYY\")\n        path\n        subtitle\n        title\n        label\n        list\n        cover {\n          childImageSharp {\n            fluid(maxWidth: 700) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\nimport { Grid } from 'semantic-ui-react'\n\nconst GLeft = ({ children }) => {\n  return (\n    <Grid.Column mobile={12} tablet={12} computer={3}>\n      {children}\n    </Grid.Column>\n  )\n}\n\nexport default GLeft\n","import React from 'react'\nimport { Grid } from 'semantic-ui-react'\n\nconst GLeft = ({ children }) => {\n  return (\n    <Grid.Column mobile={12} tablet={12} computer={9}>\n      {children}\n    </Grid.Column>\n  )\n}\n\nexport default GLeft\n"],"sourceRoot":""}